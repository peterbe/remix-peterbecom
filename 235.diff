diff --git a/app/components/screensaver.tsx b/app/components/screensaver.tsx
index 8d6285f..e3958fc 100644
--- a/app/components/screensaver.tsx
+++ b/app/components/screensaver.tsx
@@ -6,23 +6,24 @@ const ConfettiLazy = lazy(
   () => import("~/components/confetti-screensaver"),
 );

-const LAZY_START_SECONDS = 60;
-
-export function Screensaver() {
+type Props = {
+  lazyStartSeconds: number;
+};
+export function Screensaver({ lazyStartSeconds }: Props) {
   const { pathname } = useLocation();
   if (pathname.startsWith("/plog/blogitem-040601-1")) {
     return null;
   }
-  return <DelayedScreensaver />;
+  return <DelayedScreensaver lazyStartSeconds={lazyStartSeconds} />;
 }

-function DelayedScreensaver() {
+function DelayedScreensaver({ lazyStartSeconds }: Props) {
   const [loadScreensaver, setLoadScreensaver] = useState(false);
   useEffect(() => {
     const startWaiting = () => {
       return window.setTimeout(() => {
         setLoadScreensaver(true);
-      }, LAZY_START_SECONDS * 1000);
+      }, lazyStartSeconds * 1000);
     };

     let timer = startWaiting();
diff --git a/app/root.tsx b/app/root.tsx
index 3dc163e..b216698 100644
--- a/app/root.tsx
+++ b/app/root.tsx
@@ -17,11 +17,18 @@ import { Screensaver } from "~/components/screensaver";
 import { GoogleAnalytics } from "./utils/googleanalytics";

 export const loader = async () => {
-  return json({ gaTrackingId: process.env.GA_TRACKING_ID });
+  const screensaverLazyStartSeconds = process.env.SCREENSAVER_LAZY_START_SECONDS
+    ? parseInt(process.env.SCREENSAVER_LAZY_START_SECONDS)
+    : 60 * 2; // 2 minutes by default
+  return json({
+    gaTrackingId: process.env.GA_TRACKING_ID,
+    screensaverLazyStartSeconds,
+  });
 };

 export default function App() {
-  const { gaTrackingId } = useLoaderData<typeof loader>();
+  const { gaTrackingId, screensaverLazyStartSeconds } =
+    useLoaderData<typeof loader>();

   return (
     <html lang="en">
@@ -44,7 +51,7 @@ export default function App() {
         </main>

         <Footer />
-        <Screensaver />
+        <Screensaver lazyStartSeconds={screensaverLazyStartSeconds} />
       </body>
     </html>
   );
